{"version":3,"sources":["Components/TopBanner.module.css","Components/MainPage.module.css","Components/TopBanner.jsx","Components/MainPage.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","TopBanner","className","styles","container","containerContent","containerBackdrop","src","alt","classNames","birdContainer","containerOne","bird","birdOne","containerTwo","birdTwo","containerThree","birdThree","containerFour","birdFour","MainPage","props","mpContainer","btmContainer","namesSvg","NormalText","text","text2","Button","InfoSectionHeader","cutePic","infoTextRow","button","type","onClick","window","open","infoSectionHeader","infoSectionHeaderText","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gGACAA,EAAOC,QAAU,CAAC,UAAY,6BAA6B,iBAAmB,oCAAoC,kBAAoB,qCAAqC,KAAO,wBAAwB,YAAY,6BAA6B,QAAU,2BAA2B,QAAU,2BAA2B,UAAY,6BAA6B,SAAW,4BAA4B,cAAgB,iCAAiC,gBAAgB,iCAAiC,aAAe,gCAAgC,aAAe,gCAAgC,eAAiB,kCAAkC,cAAgB,iCAAiC,gBAAgB,mC,gBCAjsBD,EAAOC,QAAU,CAAC,YAAc,8BAA8B,aAAe,+BAA+B,SAAW,2BAA2B,kBAAoB,oCAAoC,sBAAwB,wCAAwC,YAAc,8BAA8B,OAAS,yBAAyB,QAAU,4B,0LCInV,SAASC,IAEtB,OACE,yBAAKC,UAAWC,IAAOC,WACrB,yBAAKF,UAAWC,IAAOE,mBAErB,yBAAKH,UAAWC,IAAOG,kBAAmBC,IAAK,iBAAkBC,IAAK,SAEvE,yBAAKN,UAAWO,IAAWN,IAAOO,cAAeP,IAAOQ,eACvD,yBAAKT,UAAWO,IAAWN,IAAOS,KAAMT,IAAOU,YAG/C,yBAAKX,UAAWO,IAAWN,IAAOO,cAAeP,IAAOW,eACxD,yBAAKZ,UAAWO,IAAWN,IAAOS,KAAMT,IAAOY,YAG/C,yBAAKb,UAAWO,IAAWN,IAAOO,cAAeP,IAAOa,iBACxD,yBAAKd,UAAWO,IAAWN,IAAOS,KAAMT,IAAOc,cAG/C,yBAAKf,UAAWO,IAAWN,IAAOO,cAAeP,IAAOe,gBACxD,yBAAKhB,UAAWO,IAAWN,IAAOS,KAAMT,IAAOgB,cCpBhD,SAASC,EAASC,GACvB,OACE,yBAAKnB,UAAWC,IAAOmB,aACrB,kBAACrB,EAAD,MACA,yBAAKC,UAAWC,IAAOoB,cACrB,yBAAKrB,UAAWC,IAAOqB,SAAUjB,IAAK,cAAeC,IAAK,SAE1D,kBAACiB,EAAD,CACEC,KAAM,+BACNC,MAAO,4BAET,kBAACF,EAAD,CACEC,KACE,2HAGJ,kBAACE,EAAD,CAAQF,KAAM,UAEd,kBAACG,EAAD,CAAmBH,KAAM,SAEzB,kBAACD,EAAD,CACEC,KACE,0IAGJ,kBAACD,EAAD,CACEC,KACE,oMAIJ,kBAACD,EAAD,CACEC,KACE,uGAIJ,kBAACD,EAAD,CAAYC,KAAM,8DAElB,yBAAKxB,UAAWC,IAAO2B,QAASvB,IAAK,mBAAoBC,IAAK,WAOtE,SAASiB,EAAWJ,GAClB,OACE,uBAAGnB,UAAWC,IAAO4B,aAClBV,EAAMK,KACNL,EAAMM,OACL,oCACE,6BACCN,EAAMM,QAOjB,SAASC,EAAOP,GAEd,OACE,4BAAQnB,UAAWC,IAAO6B,OAAQC,KAAM,SAAUC,QAFnC,kBAAMC,OAAOC,KAAK,yCAG9Bf,EAAMK,MAKb,SAASG,EAAkBR,GAAQ,IACzBK,EAASL,EAATK,KAER,OACE,yBAAKxB,UAAWC,IAAOkC,mBACrB,uBAAGnC,UAAWC,IAAOmC,uBAAwBZ,ICvEpCa,MANf,SAAalB,GACX,OACE,kBAACD,EAAD,OCOgBoB,QACW,cAA7BL,OAAOM,SAASC,UAEe,UAA7BP,OAAOM,SAASC,UAEhBP,OAAOM,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.046feb91.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TopBanner_container__3T1iV\",\"containerContent\":\"TopBanner_containerContent__3xYux\",\"containerBackdrop\":\"TopBanner_containerBackdrop__ZUCO1\",\"bird\":\"TopBanner_bird__1Yemr\",\"fly-cycle\":\"TopBanner_fly-cycle__mDD91\",\"birdOne\":\"TopBanner_birdOne__jz0N2\",\"birdTwo\":\"TopBanner_birdTwo___vt6U\",\"birdThree\":\"TopBanner_birdThree__3tXIr\",\"birdFour\":\"TopBanner_birdFour__12j6C\",\"birdContainer\":\"TopBanner_birdContainer__2d_in\",\"fly-right-one\":\"TopBanner_fly-right-one__22EH3\",\"containerOne\":\"TopBanner_containerOne__VkoiO\",\"containerTwo\":\"TopBanner_containerTwo__2zh9P\",\"containerThree\":\"TopBanner_containerThree__18wcw\",\"containerFour\":\"TopBanner_containerFour__3ZmcA\",\"fly-right-two\":\"TopBanner_fly-right-two__33MXT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mpContainer\":\"MainPage_mpContainer__3cpNU\",\"btmContainer\":\"MainPage_btmContainer__A_TzU\",\"namesSvg\":\"MainPage_namesSvg___xjSN\",\"infoSectionHeader\":\"MainPage_infoSectionHeader__36-l-\",\"infoSectionHeaderText\":\"MainPage_infoSectionHeaderText__1BlGs\",\"infoTextRow\":\"MainPage_infoTextRow__2C231\",\"button\":\"MainPage_button__3OBPL\",\"cutePic\":\"MainPage_cutePic__1L8ww\"};","import React from 'react';\n\nimport styles from './TopBanner.module.css';\nimport classNames from 'classnames';\n\nexport default function TopBanner() {\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.containerContent}>\n      </div>\n        <img className={styles.containerBackdrop} src={'./backdrop.svg'} alt={'line'} />\n\n      \t<div className={classNames(styles.birdContainer, styles.containerOne)}>\n      \t\t<div className={classNames(styles.bird, styles.birdOne)}></div>\n      \t</div>\n\n        <div className={classNames(styles.birdContainer, styles.containerTwo)}>\n      \t\t<div className={classNames(styles.bird, styles.birdTwo)}></div>\n      \t</div>\n\n        <div className={classNames(styles.birdContainer, styles.containerThree)}>\n      \t\t<div className={classNames(styles.bird, styles.birdThree)}></div>\n      \t</div>\n\n        <div className={classNames(styles.birdContainer, styles.containerFour)}>\n      \t\t<div className={classNames(styles.bird, styles.birdFour)}></div>\n      \t</div>\n    </div>\n  )\n}\n","import React from \"react\";\n\nimport styles from \"./MainPage.module.css\";\nimport TopBanner from \"./TopBanner\";\n// import MapContainer from \"./MapContainer\";\n\nexport function MainPage(props) {\n  return (\n    <div className={styles.mpContainer}>\n      <TopBanner />\n      <div className={styles.btmContainer}>\n        <img className={styles.namesSvg} src={\"./names.svg\"} alt={\"line\"} />\n\n        <NormalText\n          text={\"VÄLKOMNAR TILL BRÖLLOP\"}\n          text2={\"LÖRDAGEN 4 JULI 2020\"}\n        />\n        <NormalText\n          text={\n            \"vänligen svara här senast den 30e april. tänk på att svara en gång för varje person i sällskapet.\"\n          }\n        />\n        <Button text={\"svara\"} />\n\n        <InfoSectionHeader text={\"info\"} />\n        {/* <NormalText text={\"ursäkta röran, vi bygger om\"} /> */}\n        <NormalText\n          text={\n            \"vi kommer att anordna gemensam bussfärd för dem som vill, från posthotellet vid göteborgs centralstation till härryda.\"\n          }\n        />\n        <NormalText\n          text={\n            \"vigsel, mingel, middag och fest kommer att ske på samma adress. vi räknar med dans in på småtimmarna! hem tar ni er enklast själva. vi rekommenderar att ni delar på en taxi.\"\n          }\n        />\n\n        <NormalText\n          text={\n            \"vill ni hålla tal eller göra något annat spexit så ta kontakt via toast@adamjosefin.se\"\n          }\n        />\n\n        <NormalText text={\"mer information kommer när det börjar närma sig.\"} />\n\n        <img className={styles.cutePic} src={\"./cutest_pic.png\"} alt={\"line\"} />\n        {/* <MapContainer /> */}\n      </div>\n    </div>\n  );\n}\n\nfunction NormalText(props) {\n  return (\n    <p className={styles.infoTextRow}>\n      {props.text}\n      {props.text2 && (\n        <>\n          <br></br>\n          {props.text2}\n        </>\n      )}\n    </p>\n  );\n}\n\nfunction Button(props) {\n  const gotoForm = () => window.open(\"https://forms.gle/atNtrd7xsbP5AMHS8\");\n  return (\n    <button className={styles.button} type={\"button\"} onClick={gotoForm}>\n      {props.text}\n    </button>\n  );\n}\n\nfunction InfoSectionHeader(props) {\n  const { text } = props;\n\n  return (\n    <div className={styles.infoSectionHeader}>\n      <p className={styles.infoSectionHeaderText}>{text}</p>\n    </div>\n  );\n}\n","import React from 'react';\nimport { MainPage } from './Components/MainPage';\n\nfunction App(props) {\n  return (\n    <MainPage />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}